from valores import *

import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import read_spice


fig, ax1 = plt.subplots()
f_range = np.logspace(2, 8, 10000)
w_range = [2 * pi * i for i in f_range]


def add_legend(mode, l1, l2, l3):
    blue_patch = mpatches.Patch(color='blue', label=l1)
    red_patch = mpatches.Patch(color='red', label=l2)
    green_patch = mpatches.Patch(color='green', label=l3)

    ax1.minorticks_on()
    ax1.grid(which='major', linestyle='-', linewidth=0.3, color='black')
    ax1.grid(which='minor', linestyle=':', linewidth=0.1, color='black')

    plt.xlabel("Frecuencia (Hz)")

    if mode == "mag":
        plt.ylabel("Amplitud (dB)")
    else:
        plt.ylabel("Fase (grados)")

    plt.legend(handles=[green_patch, blue_patch, red_patch])


def get_out(v1, v2):
    h4 = [[
        a0 ** 2 * r1 * r3 * r4 * r5 * r6 * v2 * wp ** 2 + a0 ** 2 * r1 * r3 * r4 * r6 ** 2 * v2 * wp ** 2 + a0 ** 2 * r1 * r3 * r4 * r6 * r7 * v2 * wp ** 2 + a0 ** 2 * r1 * r4 ** 2 * r5 * r6 * v2 * wp ** 2 + a0 ** 2 * r1 * r4 ** 2 * r6 ** 2 * v2 * wp ** 2 + a0 ** 2 * r1 * r4 ** 2 * r6 * r7 * v2 * wp ** 2 + a0 ** 2 * r1 * r4 * r5 * r6 ** 2 * v2 * wp ** 2 + a0 ** 2 * r1 * r4 * r5 * r6 * r7 * v2 * wp ** 2 - a0 ** 2 * r2 * r3 * r4 * r5 * r6 * v1 * wp ** 2 + a0 ** 2 * r2 * r3 * r4 * r5 * r6 * v2 * wp ** 2 - a0 ** 2 * r2 * r3 * r4 * r6 ** 2 * v1 * wp ** 2 + a0 ** 2 * r2 * r3 * r4 * r6 ** 2 * v2 * wp ** 2 - a0 ** 2 * r2 * r3 * r4 * r6 * r7 * v1 * wp ** 2 + a0 ** 2 * r2 * r3 * r4 * r6 * r7 * v2 * wp ** 2 - a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * v1 * wp ** 2 + a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * v2 * wp ** 2 - a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * v1 * wp ** 2 + a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * v2 * wp ** 2 - a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * v1 * wp ** 2 + a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * v2 * wp ** 2 - a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * v1 * wp ** 2 + a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * v2 * wp ** 2 - a0 ** 2 * r2 * r4 * r5 * r6 * r7 * v1 * wp ** 2 + a0 ** 2 * r2 * r4 * r5 * r6 * r7 * v2 * wp ** 2,
        a0 ** 3 * r1 * r4 ** 2 * r5 * r6 * v2 * wp ** 3 + a0 ** 3 * r1 * r4 ** 2 * r6 ** 2 * v2 * wp ** 3 + a0 ** 3 * r1 * r4 ** 2 * r6 * r7 * v2 * wp ** 3 + a0 ** 3 * r1 * r4 * r5 * r6 ** 2 * v2 * wp ** 3 - a0 ** 3 * r1 * r4 * r5 * r6 * r7 * v1 * wp ** 3 + a0 ** 3 * r1 * r4 * r5 * r6 * r7 * v2 * wp ** 3 - a0 ** 3 * r2 * r3 * r4 * r5 * r6 * v1 * wp ** 3 + a0 ** 3 * r2 * r3 * r4 * r5 * r6 * v2 * wp ** 3 - a0 ** 3 * r2 * r3 * r4 * r6 ** 2 * v1 * wp ** 3 - a0 ** 3 * r2 * r4 ** 2 * r5 * r6 * v1 * wp ** 3 + a0 ** 3 * r2 * r4 ** 2 * r5 * r6 * v2 * wp ** 3 - a0 ** 3 * r2 * r4 ** 2 * r6 ** 2 * v1 * wp ** 3 + a0 ** 3 * r2 * r4 ** 2 * r6 ** 2 * v2 * wp ** 3 + a0 ** 3 * r2 * r4 ** 2 * r6 * r7 * v2 * wp ** 3 - a0 ** 3 * r2 * r4 * r5 * r6 ** 2 * v1 * wp ** 3 + a0 ** 3 * r2 * r4 * r5 * r6 ** 2 * v2 * wp ** 3 - a0 ** 3 * r2 * r4 * r5 * r6 * r7 * v1 * wp ** 3 + a0 ** 3 * r2 * r4 * r5 * r6 * r7 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r3 * r4 * r5 * r6 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r3 * r4 * r6 ** 2 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r3 * r4 * r6 * r7 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r4 ** 2 * r5 * r6 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r4 ** 2 * r6 ** 2 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r4 ** 2 * r6 * r7 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r4 * r5 * r6 ** 2 * v2 * wp ** 3 + 2 * a0 ** 2 * r1 * r4 * r5 * r6 * r7 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r3 * r4 * r5 * r6 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r3 * r4 * r5 * r6 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r3 * r4 * r6 ** 2 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r3 * r4 * r6 ** 2 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r3 * r4 * r6 * r7 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r3 * r4 * r6 * r7 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * v2 * wp ** 3 - 2 * a0 ** 2 * r2 * r4 * r5 * r6 * r7 * v1 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 * r5 * r6 * r7 * v2 * wp ** 3,
        a0 ** 4 * r2 * r3 * r4 * r6 ** 2 * v2 * wp ** 4 - a0 ** 4 * r2 * r3 * r4 * r6 * r7 * v1 * wp ** 4 + a0 ** 4 * r2 * r3 * r4 * r6 * r7 * v2 * wp ** 4 - a0 ** 4 * r2 * r4 ** 2 * r6 * r7 * v1 * wp ** 4 + a0 ** 3 * r1 * r4 ** 2 * r5 * r6 * v2 * wp ** 4 + a0 ** 3 * r1 * r4 ** 2 * r6 ** 2 * v2 * wp ** 4 + a0 ** 3 * r1 * r4 ** 2 * r6 * r7 * v2 * wp ** 4 + a0 ** 3 * r1 * r4 * r5 * r6 ** 2 * v2 * wp ** 4 - a0 ** 3 * r1 * r4 * r5 * r6 * r7 * v1 * wp ** 4 + a0 ** 3 * r1 * r4 * r5 * r6 * r7 * v2 * wp ** 4 - a0 ** 3 * r2 * r3 * r4 * r5 * r6 * v1 * wp ** 4 + a0 ** 3 * r2 * r3 * r4 * r5 * r6 * v2 * wp ** 4 - a0 ** 3 * r2 * r3 * r4 * r6 ** 2 * v1 * wp ** 4 - a0 ** 3 * r2 * r4 ** 2 * r5 * r6 * v1 * wp ** 4 + a0 ** 3 * r2 * r4 ** 2 * r5 * r6 * v2 * wp ** 4 - a0 ** 3 * r2 * r4 ** 2 * r6 ** 2 * v1 * wp ** 4 + a0 ** 3 * r2 * r4 ** 2 * r6 ** 2 * v2 * wp ** 4 + a0 ** 3 * r2 * r4 ** 2 * r6 * r7 * v2 * wp ** 4 - a0 ** 3 * r2 * r4 * r5 * r6 ** 2 * v1 * wp ** 4 + a0 ** 3 * r2 * r4 * r5 * r6 ** 2 * v2 * wp ** 4 - a0 ** 3 * r2 * r4 * r5 * r6 * r7 * v1 * wp ** 4 + a0 ** 3 * r2 * r4 * r5 * r6 * r7 * v2 * wp ** 4 + a0 ** 2 * r1 * r3 * r4 * r5 * r6 * v2 * wp ** 4 + a0 ** 2 * r1 * r3 * r4 * r6 ** 2 * v2 * wp ** 4 + a0 ** 2 * r1 * r3 * r4 * r6 * r7 * v2 * wp ** 4 + a0 ** 2 * r1 * r4 ** 2 * r5 * r6 * v2 * wp ** 4 + a0 ** 2 * r1 * r4 ** 2 * r6 ** 2 * v2 * wp ** 4 + a0 ** 2 * r1 * r4 ** 2 * r6 * r7 * v2 * wp ** 4 + a0 ** 2 * r1 * r4 * r5 * r6 ** 2 * v2 * wp ** 4 + a0 ** 2 * r1 * r4 * r5 * r6 * r7 * v2 * wp ** 4 - a0 ** 2 * r2 * r3 * r4 * r5 * r6 * v1 * wp ** 4 + a0 ** 2 * r2 * r3 * r4 * r5 * r6 * v2 * wp ** 4 - a0 ** 2 * r2 * r3 * r4 * r6 ** 2 * v1 * wp ** 4 + a0 ** 2 * r2 * r3 * r4 * r6 ** 2 * v2 * wp ** 4 - a0 ** 2 * r2 * r3 * r4 * r6 * r7 * v1 * wp ** 4 + a0 ** 2 * r2 * r3 * r4 * r6 * r7 * v2 * wp ** 4 - a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * v1 * wp ** 4 + a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * v2 * wp ** 4 - a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * v1 * wp ** 4 + a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * v2 * wp ** 4 - a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * v1 * wp ** 4 + a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * v2 * wp ** 4 - a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * v1 * wp ** 4 + a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * v2 * wp ** 4 - a0 ** 2 * r2 * r4 * r5 * r6 * r7 * v1 * wp ** 4 + a0 ** 2 * r2 * r4 * r5 * r6 * r7 * v2 * wp ** 4],
        [
            r1 * r3 * r4 * r5 * r6 + r1 * r3 * r4 * r6 ** 2 + r1 * r3 * r4 * r6 * r7 + r1 * r4 ** 2 * r5 * r6 + r1 * r4 ** 2 * r6 ** 2 + r1 * r4 ** 2 * r6 * r7 + r1 * r4 * r5 * r6 ** 2 + r1 * r4 * r5 * r6 * r7 + r2 * r3 * r4 * r5 * r6 + r2 * r3 * r4 * r6 ** 2 + r2 * r3 * r4 * r6 * r7 + r2 * r4 ** 2 * r5 * r6 + r2 * r4 ** 2 * r6 ** 2 + r2 * r4 ** 2 * r6 * r7 + r2 * r4 * r5 * r6 ** 2 + r2 * r4 * r5 * r6 * r7,
            2 * a0 * r1 * r3 * r4 * r5 * r6 * wp + 2 * a0 * r1 * r3 * r4 * r6 ** 2 * wp + a0 * r1 * r3 * r4 * r6 * r7 * wp + 3 * a0 * r1 * r4 ** 2 * r5 * r6 * wp + 3 * a0 * r1 * r4 ** 2 * r6 ** 2 * wp + 2 * a0 * r1 * r4 ** 2 * r6 * r7 * wp + 3 * a0 * r1 * r4 * r5 * r6 ** 2 * wp + 2 * a0 * r1 * r4 * r5 * r6 * r7 * wp + a0 * r2 * r3 * r4 * r5 * r6 * wp + a0 * r2 * r3 * r4 * r6 ** 2 * wp + 2 * a0 * r2 * r4 ** 2 * r5 * r6 * wp + 2 * a0 * r2 * r4 ** 2 * r6 ** 2 * wp + a0 * r2 * r4 ** 2 * r6 * r7 * wp + 2 * a0 * r2 * r4 * r5 * r6 ** 2 * wp + a0 * r2 * r4 * r5 * r6 * r7 * wp + 4 * r1 * r3 * r4 * r5 * r6 * wp + 4 * r1 * r3 * r4 * r6 ** 2 * wp + 4 * r1 * r3 * r4 * r6 * r7 * wp + 4 * r1 * r4 ** 2 * r5 * r6 * wp + 4 * r1 * r4 ** 2 * r6 ** 2 * wp + 4 * r1 * r4 ** 2 * r6 * r7 * wp + 4 * r1 * r4 * r5 * r6 ** 2 * wp + 4 * r1 * r4 * r5 * r6 * r7 * wp + 4 * r2 * r3 * r4 * r5 * r6 * wp + 4 * r2 * r3 * r4 * r6 ** 2 * wp + 4 * r2 * r3 * r4 * r6 * r7 * wp + 4 * r2 * r4 ** 2 * r5 * r6 * wp + 4 * r2 * r4 ** 2 * r6 ** 2 * wp + 4 * r2 * r4 ** 2 * r6 * r7 * wp + 4 * r2 * r4 * r5 * r6 ** 2 * wp + 4 * r2 * r4 * r5 * r6 * r7 * wp,
            a0 ** 2 * r1 * r3 * r4 * r5 * r6 * wp ** 2 + a0 ** 2 * r1 * r3 * r4 * r6 ** 2 * wp ** 2 + a0 ** 2 * r1 * r3 * r4 * r6 * r7 * wp ** 2 + 3 * a0 ** 2 * r1 * r4 ** 2 * r5 * r6 * wp ** 2 + 3 * a0 ** 2 * r1 * r4 ** 2 * r6 ** 2 * wp ** 2 + 2 * a0 ** 2 * r1 * r4 ** 2 * r6 * r7 * wp ** 2 + 3 * a0 ** 2 * r1 * r4 * r5 * r6 ** 2 * wp ** 2 + a0 ** 2 * r1 * r4 * r5 * r6 * r7 * wp ** 2 + a0 ** 2 * r2 * r3 * r4 * r6 * r7 * wp ** 2 + a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * wp ** 2 + a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * wp ** 2 + a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * wp ** 2 + a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * wp ** 2 + 6 * a0 * r1 * r3 * r4 * r5 * r6 * wp ** 2 + 6 * a0 * r1 * r3 * r4 * r6 ** 2 * wp ** 2 + 3 * a0 * r1 * r3 * r4 * r6 * r7 * wp ** 2 + 9 * a0 * r1 * r4 ** 2 * r5 * r6 * wp ** 2 + 9 * a0 * r1 * r4 ** 2 * r6 ** 2 * wp ** 2 + 6 * a0 * r1 * r4 ** 2 * r6 * r7 * wp ** 2 + 9 * a0 * r1 * r4 * r5 * r6 ** 2 * wp ** 2 + 6 * a0 * r1 * r4 * r5 * r6 * r7 * wp ** 2 + 3 * a0 * r2 * r3 * r4 * r5 * r6 * wp ** 2 + 3 * a0 * r2 * r3 * r4 * r6 ** 2 * wp ** 2 + 6 * a0 * r2 * r4 ** 2 * r5 * r6 * wp ** 2 + 6 * a0 * r2 * r4 ** 2 * r6 ** 2 * wp ** 2 + 3 * a0 * r2 * r4 ** 2 * r6 * r7 * wp ** 2 + 6 * a0 * r2 * r4 * r5 * r6 ** 2 * wp ** 2 + 3 * a0 * r2 * r4 * r5 * r6 * r7 * wp ** 2 + 6 * r1 * r3 * r4 * r5 * r6 * wp ** 2 + 6 * r1 * r3 * r4 * r6 ** 2 * wp ** 2 + 6 * r1 * r3 * r4 * r6 * r7 * wp ** 2 + 6 * r1 * r4 ** 2 * r5 * r6 * wp ** 2 + 6 * r1 * r4 ** 2 * r6 ** 2 * wp ** 2 + 6 * r1 * r4 ** 2 * r6 * r7 * wp ** 2 + 6 * r1 * r4 * r5 * r6 ** 2 * wp ** 2 + 6 * r1 * r4 * r5 * r6 * r7 * wp ** 2 + 6 * r2 * r3 * r4 * r5 * r6 * wp ** 2 + 6 * r2 * r3 * r4 * r6 ** 2 * wp ** 2 + 6 * r2 * r3 * r4 * r6 * r7 * wp ** 2 + 6 * r2 * r4 ** 2 * r5 * r6 * wp ** 2 + 6 * r2 * r4 ** 2 * r6 ** 2 * wp ** 2 + 6 * r2 * r4 ** 2 * r6 * r7 * wp ** 2 + 6 * r2 * r4 * r5 * r6 ** 2 * wp ** 2 + 6 * r2 * r4 * r5 * r6 * r7 * wp ** 2,
            a0 ** 3 * r1 * r3 * r4 * r6 * r7 * wp ** 3 + a0 ** 3 * r1 * r4 ** 2 * r5 * r6 * wp ** 3 + a0 ** 3 * r1 * r4 ** 2 * r6 ** 2 * wp ** 3 + 2 * a0 ** 3 * r1 * r4 ** 2 * r6 * r7 * wp ** 3 + a0 ** 3 * r1 * r4 * r5 * r6 ** 2 * wp ** 3 + a0 ** 3 * r2 * r4 ** 2 * r6 * r7 * wp ** 3 + 2 * a0 ** 2 * r1 * r3 * r4 * r5 * r6 * wp ** 3 + 2 * a0 ** 2 * r1 * r3 * r4 * r6 ** 2 * wp ** 3 + 2 * a0 ** 2 * r1 * r3 * r4 * r6 * r7 * wp ** 3 + 6 * a0 ** 2 * r1 * r4 ** 2 * r5 * r6 * wp ** 3 + 6 * a0 ** 2 * r1 * r4 ** 2 * r6 ** 2 * wp ** 3 + 4 * a0 ** 2 * r1 * r4 ** 2 * r6 * r7 * wp ** 3 + 6 * a0 ** 2 * r1 * r4 * r5 * r6 ** 2 * wp ** 3 + 2 * a0 ** 2 * r1 * r4 * r5 * r6 * r7 * wp ** 3 + 2 * a0 ** 2 * r2 * r3 * r4 * r6 * r7 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * wp ** 3 + 2 * a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * wp ** 3 + 6 * a0 * r1 * r3 * r4 * r5 * r6 * wp ** 3 + 6 * a0 * r1 * r3 * r4 * r6 ** 2 * wp ** 3 + 3 * a0 * r1 * r3 * r4 * r6 * r7 * wp ** 3 + 9 * a0 * r1 * r4 ** 2 * r5 * r6 * wp ** 3 + 9 * a0 * r1 * r4 ** 2 * r6 ** 2 * wp ** 3 + 6 * a0 * r1 * r4 ** 2 * r6 * r7 * wp ** 3 + 9 * a0 * r1 * r4 * r5 * r6 ** 2 * wp ** 3 + 6 * a0 * r1 * r4 * r5 * r6 * r7 * wp ** 3 + 3 * a0 * r2 * r3 * r4 * r5 * r6 * wp ** 3 + 3 * a0 * r2 * r3 * r4 * r6 ** 2 * wp ** 3 + 6 * a0 * r2 * r4 ** 2 * r5 * r6 * wp ** 3 + 6 * a0 * r2 * r4 ** 2 * r6 ** 2 * wp ** 3 + 3 * a0 * r2 * r4 ** 2 * r6 * r7 * wp ** 3 + 6 * a0 * r2 * r4 * r5 * r6 ** 2 * wp ** 3 + 3 * a0 * r2 * r4 * r5 * r6 * r7 * wp ** 3 + 4 * r1 * r3 * r4 * r5 * r6 * wp ** 3 + 4 * r1 * r3 * r4 * r6 ** 2 * wp ** 3 + 4 * r1 * r3 * r4 * r6 * r7 * wp ** 3 + 4 * r1 * r4 ** 2 * r5 * r6 * wp ** 3 + 4 * r1 * r4 ** 2 * r6 ** 2 * wp ** 3 + 4 * r1 * r4 ** 2 * r6 * r7 * wp ** 3 + 4 * r1 * r4 * r5 * r6 ** 2 * wp ** 3 + 4 * r1 * r4 * r5 * r6 * r7 * wp ** 3 + 4 * r2 * r3 * r4 * r5 * r6 * wp ** 3 + 4 * r2 * r3 * r4 * r6 ** 2 * wp ** 3 + 4 * r2 * r3 * r4 * r6 * r7 * wp ** 3 + 4 * r2 * r4 ** 2 * r5 * r6 * wp ** 3 + 4 * r2 * r4 ** 2 * r6 ** 2 * wp ** 3 + 4 * r2 * r4 ** 2 * r6 * r7 * wp ** 3 + 4 * r2 * r4 * r5 * r6 ** 2 * wp ** 3 + 4 * r2 * r4 * r5 * r6 * r7 * wp ** 3,
            a0 ** 4 * r1 * r4 ** 2 * r6 * r7 * wp ** 4 + a0 ** 3 * r1 * r3 * r4 * r6 * r7 * wp ** 4 + a0 ** 3 * r1 * r4 ** 2 * r5 * r6 * wp ** 4 + a0 ** 3 * r1 * r4 ** 2 * r6 ** 2 * wp ** 4 + 2 * a0 ** 3 * r1 * r4 ** 2 * r6 * r7 * wp ** 4 + a0 ** 3 * r1 * r4 * r5 * r6 ** 2 * wp ** 4 + a0 ** 3 * r2 * r4 ** 2 * r6 * r7 * wp ** 4 + a0 ** 2 * r1 * r3 * r4 * r5 * r6 * wp ** 4 + a0 ** 2 * r1 * r3 * r4 * r6 ** 2 * wp ** 4 + a0 ** 2 * r1 * r3 * r4 * r6 * r7 * wp ** 4 + 3 * a0 ** 2 * r1 * r4 ** 2 * r5 * r6 * wp ** 4 + 3 * a0 ** 2 * r1 * r4 ** 2 * r6 ** 2 * wp ** 4 + 2 * a0 ** 2 * r1 * r4 ** 2 * r6 * r7 * wp ** 4 + 3 * a0 ** 2 * r1 * r4 * r5 * r6 ** 2 * wp ** 4 + a0 ** 2 * r1 * r4 * r5 * r6 * r7 * wp ** 4 + a0 ** 2 * r2 * r3 * r4 * r6 * r7 * wp ** 4 + a0 ** 2 * r2 * r4 ** 2 * r5 * r6 * wp ** 4 + a0 ** 2 * r2 * r4 ** 2 * r6 ** 2 * wp ** 4 + a0 ** 2 * r2 * r4 ** 2 * r6 * r7 * wp ** 4 + a0 ** 2 * r2 * r4 * r5 * r6 ** 2 * wp ** 4 + 2 * a0 * r1 * r3 * r4 * r5 * r6 * wp ** 4 + 2 * a0 * r1 * r3 * r4 * r6 ** 2 * wp ** 4 + a0 * r1 * r3 * r4 * r6 * r7 * wp ** 4 + 3 * a0 * r1 * r4 ** 2 * r5 * r6 * wp ** 4 + 3 * a0 * r1 * r4 ** 2 * r6 ** 2 * wp ** 4 + 2 * a0 * r1 * r4 ** 2 * r6 * r7 * wp ** 4 + 3 * a0 * r1 * r4 * r5 * r6 ** 2 * wp ** 4 + 2 * a0 * r1 * r4 * r5 * r6 * r7 * wp ** 4 + a0 * r2 * r3 * r4 * r5 * r6 * wp ** 4 + a0 * r2 * r3 * r4 * r6 ** 2 * wp ** 4 + 2 * a0 * r2 * r4 ** 2 * r5 * r6 * wp ** 4 + 2 * a0 * r2 * r4 ** 2 * r6 ** 2 * wp ** 4 + a0 * r2 * r4 ** 2 * r6 * r7 * wp ** 4 + 2 * a0 * r2 * r4 * r5 * r6 ** 2 * wp ** 4 + a0 * r2 * r4 * r5 * r6 * r7 * wp ** 4 + r1 * r3 * r4 * r5 * r6 * wp ** 4 + r1 * r3 * r4 * r6 ** 2 * wp ** 4 + r1 * r3 * r4 * r6 * r7 * wp ** 4 + r1 * r4 ** 2 * r5 * r6 * wp ** 4 + r1 * r4 ** 2 * r6 ** 2 * wp ** 4 + r1 * r4 ** 2 * r6 * r7 * wp ** 4 + r1 * r4 * r5 * r6 ** 2 * wp ** 4 + r1 * r4 * r5 * r6 * r7 * wp ** 4 + r2 * r3 * r4 * r5 * r6 * wp ** 4 + r2 * r3 * r4 * r6 ** 2 * wp ** 4 + r2 * r3 * r4 * r6 * r7 * wp ** 4 + r2 * r4 ** 2 * r5 * r6 * wp ** 4 + r2 * r4 ** 2 * r6 ** 2 * wp ** 4 + r2 * r4 ** 2 * r6 * r7 * wp ** 4 + r2 * r4 * r5 * r6 ** 2 * wp ** 4 + r2 * r4 * r5 * r6 * r7 * wp ** 4]]
    return h4


def plot_comun(mode ):
    h1 = get_out(1, 1)

    ### teorico
    s1 = signal.lti(h1[0], h1[1])
    w, mag, pha = signal.bode(s1, w_range)

    f = [i / 2 / pi for i in w]

    if mode == "mag":
        ax1.semilogx(f, mag, "blue")
    else:
        ax1.semilogx(f, pha, "blue")

    spice_data = read_spice.read_file_spice("input/spice/modo_comun_TL084.txt")

    